---
title: "BI_retarining_datavis_hw_1"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(patchwork)
library(gghighlight)

hogwarts <- read_csv("data/hogwarts_2025.csv")
tips <- read_csv("data/podskazka.csv")
```

### **0.**

```{r}
ggplot(tips, aes(x = x, y = -y)) + 
  geom_point(size = 1, alpha = 0.8) +
  coord_fixed() + 
  theme_void() +
  labs(title = "Скрытая надпись из файла podskazka.csv")
```

### 1.

```{r}
ggplot(hogwarts, aes(x = factor(course))) +
  geom_bar(
    fill = "#6495ED",
    color = "black",
    width = 0.7
  ) +
  labs(
    title = "Распределение студентов по курсам",
    x = "Курс обучения",
    y = "Количество студентов"
  ) +
  theme_minimal(base_size = 15)
```

> Результат: 1 б.

> Комментарии:

- Хорошая работа, аккуратный график. Здорово, что вы увеличили размер шрифта, так читаемость стала ощутимо лучше. Единственный момент -- это не было прописано в тексте задания, но заголовок и подзаголовок лучше центрировать по ширине (можно прописать это в теме, например, так: `plot.title = element_text(hjust = 0.5)`). 

### 2.

```{r}
library(scales)

hogwarts %>%
  mutate(
    Факультет = case_when(
      house == "Slytherin"  ~ "Слизерин",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Ravenclaw"  ~ "Когтевран",
      TRUE ~ house
    ),
    Происхождение = case_when(
      bloodStatus == "pure-blood"  ~ "Чистокровные",
      bloodStatus == "half-blood"  ~ "Полукровные",
      bloodStatus == "muggle-born" ~ "Грязнокровные",
      TRUE ~ bloodStatus
    )
  ) %>%
  ggplot(aes(x = Факультет, fill = Происхождение)) +
  geom_bar(position = "fill", color = "black", width = 0.8) +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  labs(
    title = "Распределение студентов по факультетам\nс учётом происхождения (в долях)",
    x = "Факультет",
    y = "Доля студентов",
    fill = "Происхождение"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(face = "bold", lineheight = 1.1),
    axis.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 15, hjust = 1)
  )
```

Как можно видеть из данного графика, наибольшее количество студентов Хогвартса - Полукровные волшебники. Также мы видим, что, судя по всему, Слизерин не принимает детей, рожденных двумя маглами. Зато отдает большее предпочтение чистокровным волшебникам.

> Результат: 1.75 б.

> Комментарии:

- Хороший результат, лаконичная но полная интерпретация.

- Здорово, что вы используете материал более поздних лекций в задании -- применение функционала пакета `scales` здесь весьма уместно.

- Однако, одновременно с этим несколько меняется значение оси Y -- теперь там отображены не части целого (доли), а проценты, соответственно, название оси не совсем верно.

- Мысль с поворотом меток оси под углом -- возможный способ сэкономить пространство, но часто такой подход может привести к трудностям (более сложное чтение меток, трудности с опредедлением того, какая подпись к какому столбику относится). Иной опцией может быть, например, увеличение размера графика.

### 3.

```{r}
library(forcats)

df_w3 <- hogwarts %>%
  mutate(
    Факультет = case_when(
      house == "Slytherin"  ~ "Слизерин",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Ravenclaw"  ~ "Когтевран",
      TRUE ~ house
    ),
    Факультет = fct_reorder(Факультет, week_3, .fun = median, .desc = TRUE)
  )

ggplot(df_w3, aes(x = Факультет, y = week_3)) +
  geom_violin(fill = "#B0C4DE", color = "grey25", alpha = 0.9, trim = FALSE) +
  geom_boxplot(width = 0.16, outlier.shape = NA, fill = "white", color = "black") +
  geom_jitter(width = 0.08, height = 0, alpha = 0.35, size = 1) +
  stat_summary(fun = median, geom = "point", shape = 23, size = 2.8, fill = "gold", color = "black") +
  labs(
    title = "Распределение баллов на 3-й неделе обучения по факультетам",
    subtitle = "Форма (violin) + описательные статистики (boxplot и медиана)",
    x = "Факультет (отсортированы по убыванию медианы)",
    y = "Баллы на 3-й неделе"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 15, hjust = 1)
  )
```

Здесь можно видеть, что самый высокий медианный балл у факультета Гриффиндор, а самый низкий - у Слизерина, хотя у всех факультетов медианный балл близок к нулю. И распределение баллов у всех факультетов можно сказать что унимодальное, большая часть полученных баллов за 3 неделю группируются вокруг нуля.

> Результат: 1.5 б.

> Комментарии:

- Интересная идея с совмещением трех видов геомов -- эксперименты -- это здорово! Но конкретно здесь она, похоже, сыграла злую шутку: за точками не видно боксплота, а с ним пропали и описательные статистики (медиана и квартили). Здесь, возможно, выбором бы стало или совмещение боксплота с вайолином, или боксплота с джиттером (тогда бокс можно не делать узким, и будут видны и отдельные наблюдения, и отсечки боксплота).

- Здорово, что вы настроили `outlier.shape = NA` у боксплотов и избежали дублирования точек.

- Полезная практика, что вы добавляете на график дополнительные текстовые пояснения о том, какие преобразования были сделаны, и что собственно график отображает.

- К сожалению, часть заголовка выходит за пределы графика и теряется в области неизведанного. Делать перенос строки в произвольном месте можно при помощи символа `\n`.

- Интерпретация корректная. Одно небоольшое уточнение -- факультетов с самым высоким медианным баллом -- два (у Гриффиндора и Когтеврана они равны).

- Комментарий не про датавиз: пакет `forcats` можно не подгружать отдельно, т.к. он входит в состав `tidyverse`.

- Альтернативой подходы с переименованием категорий внутри датасета можно считать использование именованных векторов для аргумента `labels` внутри функций `scales_*`. Плюс такого подхода, что он не приводит к перезаписи исходных меток.


### 4.

```{r}
hogwarts %>%
  ggplot(aes(x = `Muggle studies exam`)) +
  geom_histogram(
    bins = 15,
    fill = "#FFB347",
    color = "black",
    alpha = 0.85
  ) +
  facet_wrap(~ course, ncol = 4) +
  labs(
    title = "Распределение результатов экзамена по магловедению",
    subtitle = "Фасет по курсу обучения",
    x = "Баллы за экзамен",
    y = "Количество студентов"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    panel.spacing = unit(0.6, "lines")
  )
```

Из данного графика мы можем видеть, что распредение баллов за экзамен по магловедению во всех курсах унимодальное с пиком около 50 или 60 баллов.

> Результат: 1 б.

> Комментарии:

- Хорошая работа! `facet_wrap()` -- действительно, то, что было нужно в этой ситуации. 

- Здорово, что вы стараетесь донастроить дополнительное каждый график, меняя тему в соответствии с происходящим на полотнище.

### 5.

```{r}
library(ggplot2)

df_year <- hogwarts %>%
  mutate(
    total_year = rowSums(across(starts_with("week_")), na.rm = TRUE),
    herb = `Herbology exam`
  )

df_scatter <- df_year %>%
  count(total_year, herb, name = "n")

ggplot(df_scatter, aes(x = total_year, y = herb)) +
  geom_point(aes(size = n), alpha = 0.6) +
  scale_size_area(max_size = 6, guide = "none") +
  geom_smooth(
    aes(weight = n),
    method = "lm", formula = y ~ x,
    se = FALSE, linewidth = 1.1, color = "firebrick"
  ) +
  labs(
    title = "Связь суммарного балла за год и оценки по травологии",
    subtitle = "Точки агрегированы: размер отражает число студентов с одинаковыми значениями",
    x = "Суммарный балл за год (week_1 … week_40)",
    y = "Оценка за экзамен по травологии"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold")
  )
```

Мы видим четкий тренд - чем выше суммарный балл за год (сложение баллов за недели с первой по сороковую), тем выше оценка за экзамен по травологии (гербологии). В какой-то момент мы также видим, что высшая оценка за экзамен по травологии - 100 баллов. Также мы видим, что большая часть студентов получили положительные суммарные баллы за год и больше 75 баллов за травологию.

> Результат: 1.25 б.

> Комментарии:

- Интересная реализация. Я, скорее, ожидал обычный скаттерплот на неизмененном датасете, но ваш подход тоже валиден -- только в таком случае была бы полезна легенда, чтобы понимать, сколько примерно человек соответствует точке размера X.

- Согласен с интерпретацией.

- На график снова не поместилась часть текста -- на этот раз -- подзаголовок.

### 6.

```{r}
pal <- c(
  "Гриффиндор" = "#C50000",
  "Пуффендуй"  = "#ECB936",
  "Когтевран"  = "#41A6D9",
  "Слизерин"   = "#1F5D25"
)

df_exams <- hogwarts %>%
  mutate(
    total_year = rowSums(across(starts_with("week_")), na.rm = TRUE),
    Факультет = case_when(
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Ravenclaw"  ~ "Когтевран",
      house == "Slytherin"  ~ "Слизерин",
      TRUE ~ as.character(house)
    )
  ) %>%
  select(total_year, Факультет,
         `Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`) %>%
  pivot_longer(
    cols = c(`Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`),
    names_to = "exam",
    values_to = "score"
  ) %>%
  mutate(
    Экзамен = recode(exam,
                     `Herbology exam`      = "Травология",
                     `Muggle studies exam` = "Магловедение",
                     `Arithmancy exam`     = "Нумерология",
                     `Potions exam`        = "Зельеварение")
  ) %>%
  mutate(Факультет = factor(Факультет, levels = names(pal)))

df_agg <- df_exams %>%
  count(Экзамен, total_year, score, Факультет, name = "n")

ggplot(df_agg, aes(x = total_year, y = score, color = Факультет)) +
  geom_point(aes(size = n), alpha = 0.6) +
  scale_size_area(max_size = 5, guide = "none") +
  scale_color_manual(values = pal, name = "Факультет") +
  geom_smooth(
    aes(weight = n, group = 1),
    method = "lm", formula = y ~ x, se = FALSE,
    linewidth = 1.05, color = "black"
  ) +
  facet_wrap(~ Экзамен, ncol = 2) +
  labs(
    title = "Суммарный годовой балл vs оценка за экзамен",
    subtitle = "Точки агрегированы (размер = частота); чёрная линия — линейный тренд без доверительного интервала",
    x = "Суммарный балл за год (week_1 … week_40)",
    y = "Баллы за экзамен"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    legend.position = "bottom",
    panel.spacing = unit(0.6, "lines")
  )
```

Мы можем видеть, что для трех предметов (магловедение, нумерология, травология) общий тренд сохраняется - чем выше суммарный балл за год, тем лучше баллы за экзамен. При этом у травологии баллы начинаются примерно с 30 (видимо, добрый профессор). Также видно, что большая часть Слизерина получила плохие оценки и плохие баллы за год, при этом есть небольшая часть Слизерина, получающая очень хорошие оценки (то есть отчетливо выделяется два типа учеников).

Однако совсем другая ситуация у Зельеварения. Во-первых, мы видим, что чем лучше общий балл, тем хуже (незначительно, но все же) балл за экзамен (профессор Снейп не любит таких, как Гермиона). Также мы видим, что это относится ко всем факультетам, кроме Слизерина - у них почти у всех около 90-100 баллов. Профессор Снейп явно предвзят.

> Результат: 1.25 б.

> Комментарии:

- Вы отлично проинтерпретировали график: заметили общие зависимости, увидели два кластера слизеринцев и их высокий балл по зельеварению. Единственное -- я бы поспорил, что низкий годовой балл у большей части Слизерина -- фактически соотношение 50/50, а искажение вносит оверплоттинг.

- Собственно, об оверплоттинге -- маленький размер графика и крупные точки как раз и приводят к тому, что картина становится слишком шумной, и даже повышение прозрачности точек помогает не слишком. В этой ситуации верный подход -- увеличить график и уменьшить размер точек (можно перейти, опять же, к стандартному датасету без трансформаций).

### 7.

```{r}
# Группируем по факультетам

pal <- c(
  "Гриффиндор" = "#C50000",
  "Пуффендуй"  = "#ECB936",
  "Когтевран"  = "#41A6D9",
  "Слизерин"   = "#1F5D25"
)

df_exams <- hogwarts %>%
  mutate(
    total_year = rowSums(across(starts_with("week_")), na.rm = TRUE),
    Факультет = case_when(
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Ravenclaw"  ~ "Когтевран",
      house == "Slytherin"  ~ "Слизерин",
      TRUE ~ as.character(house)
    )
  ) %>%
  select(total_year, Факультет,
         `Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`) %>%
  pivot_longer(
    cols = c(`Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`),
    names_to = "exam",
    values_to = "score"
  ) %>%
  mutate(
    Экзамен = recode(exam,
                     `Herbology exam`      = "Травология",
                     `Muggle studies exam` = "Магловедение",
                     `Arithmancy exam`     = "Нумерология",
                     `Potions exam`        = "Зельеварение")
  ) %>%
  mutate(Факультет = factor(Факультет, levels = names(pal)))

df_agg <- df_exams %>%
  count(Экзамен, total_year, score, Факультет, name = "n")

ggplot(df_agg, aes(x = total_year, y = score, color = Факультет)) +
  geom_point(aes(size = n), alpha = 0.55) +
  scale_size_area(max_size = 5, guide = "none") +
  scale_color_manual(values = pal, name = "Факультет") +
  geom_smooth(
    aes(weight = n),
    method = "lm", formula = y ~ x, se = FALSE,
    linewidth = 1.05
  ) +
  facet_wrap(~ Экзамен, ncol = 2) +
  labs(
    title = "Годовой суммарный балл vs оценка за экзамен: тренды по факультетам",
    subtitle = "Цвет — факультет; точки агрегированы (размер = частота); линии — линейная регрессия без доверительного интервала",
    x = "Суммарный балл за год (week_1 … week_40)",
    y = "Баллы за экзамен"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    legend.position = "bottom",
    panel.spacing = unit(0.6, "lines")
  ) +
  guides(
    color = guide_legend(
      override.aes = list(alpha = 1, linewidth = 1.4, size = 3)
    )
  )
```

Как и предполагалось, для всех предметов, кроме Зельеваренья, линии тренда одинаковы для всех факультетов. А вот для Зельеваренья, линия тренда Слизерина явно выше, чем у всех остальных. Снейп явно biased.

```{r}
# то же самое, но по чистоте крови

pal_bs <- c(
  "Чистокровные" = "#1B9E77",
  "Полукровные"  = "#D95F02",
  "Грязнокровные"= "#7570B3"
)


df_exams <- hogwarts %>%
  mutate(
    total_year = rowSums(across(starts_with("week_")), na.rm = TRUE),
    Происхождение = case_when(
      bloodStatus == "pure-blood"  ~ "Чистокровные",
      bloodStatus == "half-blood"  ~ "Полукровные",
      bloodStatus == "muggle-born" ~ "Грязнокровные",
      TRUE ~ as.character(bloodStatus)
    )
  ) %>%
  select(total_year, Происхождение,
         `Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`) %>%
  pivot_longer(
    cols = c(`Herbology exam`, `Muggle studies exam`, `Arithmancy exam`, `Potions exam`),
    names_to = "exam",
    values_to = "score"
  ) %>%
  mutate(
    Экзамен = recode(exam,
                     `Herbology exam`      = "Травология",
                     `Muggle studies exam` = "Магловедение",
                     `Arithmancy exam`     = "Нумерология",
                     `Potions exam`        = "Зельеварение"),
    Экзамен = factor(Экзамен, levels = c("Травология","Магловедение","Нумерология","Зельеварение"))
  )

df_points <- df_exams %>%
  count(Экзамен, total_year, score, name = "n")

df_lines <- df_exams %>%
  count(Экзамен, total_year, score, Происхождение, name = "n")

ggplot() +
  geom_point(
    data = df_points,
    aes(x = total_year, y = score, size = n),
    alpha = 0.5, color = "grey40"
  ) +
  scale_size_area(max_size = 5, guide = "none") +
  geom_smooth(
    data = df_lines,
    aes(x = total_year, y = score, color = Происхождение, weight = n),
    method = "lm", formula = y ~ x, se = FALSE, linewidth = 1.1
  ) +
  scale_color_manual(values = pal_bs, name = "Происхождение") +
  facet_wrap(~ Экзамен, ncol = 2) +
  labs(
    title = "Годовой суммарный балл vs оценка за экзамен: тренды по происхождению",
    subtitle = "Точки агрегированы (размер = частота одинаковых пар); цвет линий — происхождение (bloodStatus)",
    x = "Суммарный балл за год (week_1 … week_40)",
    y = "Баллы за экзамен"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title  = element_text(face = "bold"),
    legend.position = "bottom",
    panel.spacing = unit(0.6, "lines")
  )
```

Тут можно порадоваться - на всех предметах, кроме Зельеваренья, нет дискриминации по чистоте крови. На Зельеваренье есть небольшая дискриминация, но я думаю, что это результат лучшего отношения к Слизерину, в котором грязнокровных нет вообще, а полукровных меньше, чем на других факультетах.

> Результат: 1 б.

> Комментарии:

- По поводу линий тренда по факультетам -- это неплохой подход, но в некотором смысле дублирующий уже имеющуюся информацию. К тому же, он не вполне удовлетворяет условию `одно из наблюдений на предыдущем этапе, относящееся ко всем 4-м экзаменам`. Здесь имелось в виду довольно характерное бимодальное распределение студентов факультета Слизерин -- есть группа студентов с высоким итоговым баллом, и их антагонисты с низким, причем в 3-х из 4-х случаев их оценка за экзамен совпадает с общим трендом. Студенты на других факультетах не имеют такой широкой пропасти между теми, кто набрал много, и набрал мало. Дальше можно было бы поперебирать разные категориальные переменные, и посмотреть, что получается. В теории мы могли бы прийти к результату, когда на каждом графике имеется 2 линии тренда: одна для мальчиков, и одна для девочек.

- Второй график интересен тем, что он спойлерит 9-е задание, это интересно) Но здесь пропало исходное разбиение по факультетам, возможно как попытка не допустить смешения цветов. Возможным решением мог бы стать такой подход: задать точки какой-либо из форм, допускающих заливку (fill), раскрасить их при помощи fill, а линии покрасить, используя colour.

### 8.

```{r}
library(patchwork)

df2 <- hogwarts %>%
  select(`Divinations exam`, `Defence against the dark arts exam`) %>%
  pivot_longer(
    everything(),
    names_to = "exam",
    values_to = "score"
  ) %>%
  mutate(
    Экзамен = recode(exam,
      `Divinations exam` = "Прорицания",
      `Defence against the dark arts exam` = "Защита от тёмных искусств"
    )
  ) %>%
  mutate(Экзамен = factor(Экзамен, levels = c("Прорицания","Защита от тёмных искусств")))

pal_exam <- c("Прорицания" = "#7A6FF0", "Защита от тёмных искусств" = "#2E8B94")

meds <- df2 %>%
  group_by(Экзамен) %>%
  summarise(med = median(score), .groups = "drop")

# Способ 1 - Плотности (форма распределения) + линии медиан (разные геомы, общее поле X)
p1 <- ggplot(df2, aes(x = score, fill = Экзамен, color = Экзамен)) +
  geom_density(alpha = 0.25, adjust = 1) +
  geom_vline(data = meds, aes(xintercept = med, color = Экзамен),
             linetype = "dashed", linewidth = 0.9) +
  scale_color_manual(values = pal_exam, guide = guide_legend(title = "Экзамен")) +
  scale_fill_manual(values = pal_exam, guide = "none") +
  labs(
    title = "Плотность распределения",
    x = "Баллы за экзамен",
    y = "Плотность"
  ) +
  theme_minimal(base_size = 13) +
  theme(plot.title = element_text(face = "bold"))

# Способ 2 - Ящики с точками (описательные статистики + индивидуальные наблюдения)
p2 <- ggplot(df2, aes(x = Экзамен, y = score, fill = Экзамен)) +
  geom_boxplot(width = 0.5, outlier.shape = NA, color = "black") +
  geom_jitter(width = 0.12, alpha = 0.25, size = 0.9, color = "grey30") +
  scale_fill_manual(values = pal_exam, guide = "none") +
  labs(
    title = "Boxplot + точки (распространённость и разброс)",
    x = NULL, y = "Баллы за экзамен"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.x = element_text(face = "bold")
  )

# Способ 3 - Эмпирические функции распределения (ECDF, «лестницы»)
p3 <- ggplot(df2, aes(x = score, color = Экзамен)) +
  stat_ecdf(geom = "step", linewidth = 1.05) +
  geom_vline(data = meds, aes(xintercept = med, color = Экзамен),
             linetype = "dashed", linewidth = 0.9) +
  scale_color_manual(values = pal_exam, guide = guide_legend(title = "Экзамен")) +
  labs(
    title = "Эмпирическая CDF (сравнение «кто правее»)",
    x = "Баллы за экзамен",
    y = "Доля наблюдений ≤ x"
  ) +
  theme_minimal(base_size = 13) +
  theme(plot.title = element_text(face = "bold"))

(p1 | p2) / p3 +
  plot_annotation(
    title = "Прорицания vs Защита от тёмных искусств: три разных сравнения распределений",
    subtitle = "Верх: форма (плотности) и описательная статистика (boxplot+точки). Низ: ЭКР для сопоставления доминирования.\nПунктир — медиана каждого экзамена.",
    theme = theme(
      plot.title = element_text(face = "bold", size = 15),
      plot.subtitle = element_text(size = 11)
    )
  )
```

Мы видим, что баллы за прорицание распределены унимодально с четко выраженным пиком, при этом медиана находится около 12,5 баллов, что довольно низко (профессор Трелони, как мы помним, сама не особо умела прорицать).

В защите от темных искусств распредение бимодальное, с двумя пиками около 25 и 75. При этом студенты могли набрать любой балл от 0 до 100.

> Результат: 0.75 б. 

> Комментарии: 

- Очень интересный идейно, но, увы не вполне рационально реализованный график. Хороший выбор геомов для визуализации распределения, плюс достаточно нешаблонный CDF. Но при этом верхнюю часть графмка прчим екльзя прочесть -- иллюстрации очень мелкие, текст частью выходит за край, частью наползает друг на друга. Тут точно бы пригодились и увеличение графика, и более тонкая доработка темы.

- Очень здорово, что вы используете подходы, выходящие раз рамки лекционного материала (как `stat_` в этой ситуации).

- Достаточно хорошая интерпретация, все здорово.

### 9.

```{r}
df_potions <- hogwarts %>%
  mutate(
    Происхождение = case_when(
      bloodStatus == "muggle-born" ~ "Грязнокровные",
      bloodStatus == "half-blood"  ~ "Полукровные",
      bloodStatus == "pure-blood"  ~ "Чистокровные",
      TRUE ~ as.character(bloodStatus)
    ),
    Факультет = case_when(
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Ravenclaw"  ~ "Когтевран",
      house == "Slytherin"  ~ "Слизерин",
      TRUE ~ as.character(house)
    ),
    Происхождение = fct_relevel(Происхождение,
      "Грязнокровные", "Полукровные", "Чистокровные"
    )
  )

sum_potions <- df_potions %>%
  group_by(Происхождение) %>%
  summarise(
    n   = n(),
    mean = mean(`Potions exam`, na.rm = TRUE),
    sd   = sd(`Potions exam`,  na.rm = TRUE),
    se   = sd / sqrt(n),
    ci95 = 1.96 * se,
    .groups = "drop"
  )

ggplot(sum_potions, aes(x = Происхождение, y = mean, fill = Происхождение)) +
  geom_col(color = "black", width = 0.7, show.legend = FALSE) +
  geom_errorbar(aes(ymin = mean - ci95, ymax = mean + ci95), width = 0.18) +
  geom_text(aes(label = sprintf("%.1f", mean)), vjust = -0.6, size = 4) +
  labs(
    title = "Средний балл по зельеварению по происхождению",
    subtitle = "Столбики — средние; «усики» — 95% доверительные интервалы. Порядок слева направо: маглорожденные → полукровные → чистокровные",
    x = "Происхождение",
    y = "Средний балл по зельеварению"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold")
  )
```

Мы видим явную предвзятость, так как средний балл маглорожденных (грязнокровных) сильно и достоверно ниже, чем у чистокровных. Полукровки - посередине. Но как я уже писал выше, тут, скорее всего, дело не в нелюбви к грязнокровкам, а в нелюбви ко всем остальным факультетам, кроме Слизерина, у профессора Снейпа. И просто так совпало, что в Слизерине нет грязнокровок и меньше, чем на других факультетах, полукровок.

Гипотеза: различия по происхождению обусловлены составом факультетов

Проверка: сравним средние по происхождению внутри каждого факультета. Если «преимущество чистокровных» почти исчезает после учёта факультета — значит работал фактор факультета.

```{r}
pal_bs <- c(
  "Чистокровные" = "#1B9E77",
  "Полукровные"  = "#D95F02",
  "Грязнокровные"= "#7570B3"
)

sum_by_house <- df_potions %>%
  group_by(Факультет, Происхождение) %>%
  summarise(
    n   = n(),
    mean = mean(`Potions exam`, na.rm = TRUE),
    sd   = sd(`Potions exam`,  na.rm = TRUE),
    se   = sd / sqrt(n),
    ci95 = 1.96 * se,
    .groups = "drop"
  ) %>%
  mutate(
    Происхождение = fct_relevel(Происхождение, "Грязнокровные","Полукровные","Чистокровные")
  )

ggplot(sum_by_house,
       aes(x = Происхождение, y = mean, fill = Происхождение)) +
  geom_col(color = "black", width = 0.7) +
  geom_errorbar(aes(ymin = mean - ci95, ymax = mean + ci95), width = 0.18) +
  facet_wrap(~ Факультет, ncol = 2) +
  scale_fill_manual(values = pal_bs, guide = "none") +
  labs(
    title = "Средний балл по зельеварению по происхождению внутри факультетов",
    x = "Происхождение",
    y = "Средний балл по зельеварению"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold")
  )
```

Как мы видим, внутри факультетов достовреной разницы между людьми с разным происхождением нет. При этом отчетливо видно, что у Слизерина в обоих присутсвующих категориях оценки выше чем у соответсвующих категорий других факультетов (у полукровок даже незначительно выше чем у чистокровных). Таким образом, профессор Снейп не расист, а просто Слизерин-супрематист.

> Результат: 3 б.

> Комментарии:

- Отличная работа с точки зрения интерпретации -- хорошая гипотеза, прекрасное подтверждение. Очень здорово, что вы указываете, что именно составляет пресловутый интервал на графике -- это важно, потому что без подписи может быть проблематично сразу опознать, что это: доверительный интервал, стандартная ошибка, стандартное отклонение, размах, или еще какая-нибудь мера дисперсии. Также отлично, что вы указываете числовое значение среднего, но лучше размещать метки так, чтобы они не пересекались с другими элементами графика.

- Столбиковые диаграммы не очень хорошо подходят для визуализации средних, поскольку теряется физический смысл у объемов столбиков (который обычно обозначает штуки или доли). Вместо них стоит задействовать точки.

### 10.

```{r}
df <- hogwarts %>%
  transmute(
    charms = `Charms exam`,
    runes  = `Study of ancient runes exam`
  )

p0 <- ggplot(df, aes(charms, runes)) +
  geom_point(size = 1.1, alpha = 0.9) +
  labs(title = "Базовый скаттер: заметный оверплоттинг",
       x = "Баллы за экзамен по заклинаниям",
       y = "Баллы за экзамен по древним рунам") +
  theme_minimal(base_size = 13)

p0

```

```{r}

# Способ 1 - Агрегирование дубликатов координат: размер точки = частота
df_counts <- df %>% count(charms, runes, name = "n")
p1 <- ggplot(df_counts, aes(charms, runes)) +
  geom_point(aes(size = n), alpha = 0.6) +
  scale_size_area(max_size = 7, guide = "none") +
  labs(title = "Агрегирование дубликатов (size = частота)",
       x = "Заклинания", y = "Древние руны") +
  theme_minimal(base_size = 13)

p1
```

```{r}
# Способ 2 - небольшое дрожание по обеим осям, чтобы развести идентичные баллы
p2 <- ggplot(df, aes(charms, runes)) +
  geom_jitter(width = 0.3, height = 0.3, alpha = 0.35, size = 0.9) +
  labs(title = "Небольшой jitter по X и Y",
       x = "Заклинания", y = "Древние руны") +
  theme_minimal(base_size = 13)

p2
```

```{r}
# Способ 3 - 2D-биннинг (прямоугольные "тепловые" бины)
p3 <- ggplot(df, aes(charms, runes)) +
  geom_bin2d(bins = 30) +
  labs(title = "2D-биннинг (geom_bin2d)",
       x = "Заклинания", y = "Древние руны", fill = "Частота") +
  theme_minimal(base_size = 13)

p3
```

```{r}
# Способ 4 - 2D-плотность (ядровая): закрашенные изоденсы
p4 <- ggplot(df, aes(charms, runes)) +
  stat_density_2d_filled(contour_var = "ndensity", alpha = 0.9) +
  labs(title = "2D-плотность (stat_density_2d_filled)",
       x = "Заклинания", y = "Древние руны", fill = "Плотность") +
  theme_minimal(base_size = 13)

p4
```

> Результат: 2 б.

> Комментарии:

- Валидные методы. История с аггрегацией выглядит как шаг, из которого эволюционно вытекают двумерная гистограмма и график 2d-плотности. Также можно использовать прозрачность как самостоятельный метод, или задействовать "пустотелые" геомы.

- Для лучшего сопоставления всех графиков можно объединить их, например, при помощи `patchwork`.

### 11.

```{r}
df30 <- hogwarts %>%
  slice_head(n = 30) %>%
  mutate(
    Происхождение = case_when(
      bloodStatus == "pure-blood"  ~ "Чистокровные",
      bloodStatus == "half-blood"  ~ "Полукровные",
      bloodStatus == "muggle-born" ~ "Грязнокровные",
      TRUE ~ as.character(bloodStatus)
    ),
    Факультет = case_when(
      house == "Ravenclaw"  ~ "Когтевран",
      house == "Gryffindor" ~ "Гриффиндор",
      house == "Hufflepuff" ~ "Пуффендуй",
      house == "Slytherin"  ~ "Слизерин",
      TRUE ~ as.character(house)
    )
  ) %>%
  pivot_longer(starts_with("week_"), names_to = "week", values_to = "score") %>%
  mutate(week = readr::parse_number(week)) %>%
  ungroup()

ggplot(df30, aes(x = week, y = score, group = id, color = Происхождение)) +
  geom_line(size = 0.5) +
  gghighlight(
    Факультет == "Когтевран",
    use_direct_label = TRUE,
    label_key = Происхождение,
    label_params = list(
      max.overlaps = Inf,
      nudge_x = 0.6,
      direction = "y",
      box.padding = 0.25,
      min.segment.length = 0
    ),
    unhighlighted_params = list(
      color = "#87CEEB",
      size  = 0.15,
      alpha = 0.6
    )
  ) +
  scale_x_continuous(breaks = seq(0, 40, 5)) +
  labs(
    title = "Первые 30 студентов: динамика по неделям",
    subtitle = "Когтевран подсвечен; лейблы показывают происхождение",
    x = "Неделя", y = "Баллы"
  ) +
  theme_minimal(base_size = 14) +
  theme(legend.position = "none")

```

> Результат: 2 б.

> Комментарии:

- Отличная работа, все хорошо! Очень здорово настроены метки.

### 12.

```{r}
library(grid)

pal_house <- c(
  "Гриффиндор" = "#C50000",
  "Пуффендуй"  = "#ECB936",
  "Когтевран"  = "#41A6D9",
  "Слизерин"   = "#1F5D25"
)

df <- hogwarts %>%
  transmute(
    Пол = recode(sex,
                 "female" = "Девочки",
                 "male"   = "Мальчики",
                 .default = as.character(sex)),
    Факультет = recode(house,
                       "Gryffindor" = "Гриффиндор",
                       "Hufflepuff" = "Пуффендуй",
                       "Ravenclaw"  = "Когтевран",
                       "Slytherin"  = "Слизерин",
                       .default = as.character(house)),
    Очки = result
  ) %>%
  mutate(
    Факультет = factor(Факультет, levels = c("Гриффиндор","Пуффендуй","Когтевран","Слизерин")),
    Пол = factor(Пол, levels = c("Девочки","Мальчики"))
  )

arrows_df <- tibble(
  Пол = factor(c("Девочки","Мальчики"), levels = levels(df$Пол)),
  x  = factor("Слизерин", levels = levels(df$Факультет)),
  xend = x,
  y  = c(  5,  12),
  yend = c( 25,  28)
)

ggplot(df, aes(x = Факультет, y = Очки, fill = Факультет)) +
  geom_violin(color = "black", width = 0.95, alpha = 0.95, trim = FALSE) +
  geom_boxplot(width = 0.16, outlier.shape = NA, fill = "white", color = "white", linewidth = 0.9) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3.8,
               fill = "#8B0000", color = "black") +
  geom_hline(yintercept = 0, linetype = "dashed", linewidth = 1.1, color = "#F19999") +
  geom_curve(
    data = arrows_df,
    aes(x = as.numeric(x) - 0.15, y = y, xend = as.numeric(x) - 0.15, yend = yend),
    inherit.aes = FALSE, curvature = -0.35,
    arrow = arrow(length = unit(3, "mm")), color = "black", linewidth = 0.6
  ) +
  scale_fill_manual(values = pal_house, name = "Факультет") +
  facet_grid(. ~ Пол) +
  labs(
    title = "Баллы студентов Хогвартса",
    subtitle = "Распределение числа баллов у студентов различных факультетов Хогвартса в 2024–2025 учебном году",
    x = NULL,
    y = "Количество очков",
    caption = "Источник: недоброжелательная фантазия автора лекции, пропущенная сквозь сознание Артема Пустовида (меня)"
  ) +
  theme_minimal(base_size = 16) +
  theme(
    plot.title = element_text(face = "bold", size = 20, margin = margin(b = 2)),
    plot.subtitle = element_text(color = "#6B4E3D", face = "bold", size = 12, margin = margin(b = 8)),
    axis.title.y = element_text(face = "bold", size = 16, margin = margin(r = 8)),
    axis.text.x  = element_text(face = "bold", size = 13),
    strip.background = element_rect(fill = "grey90", color = NA),
    strip.text = element_text(face = "bold", size = 14),
    legend.position = "bottom",
    legend.title = element_text(face = "bold"),
    panel.spacing.x = unit(1, "lines")
  )
```

Интерпретация: Мы видим, что у Гриффиндора и у Пуффендуя примерно одинаковая успеваемость (и у мальчиков, и у девочек). Когтевран имеет чуть более хорошую успеваемость. Наиболее необычен Слизерин. В нем самые успешные среди всех факультетов девочки (самая неуспешная девочка успешнее среднего Слизеринца), и самые неуспешные мальчики (самый успешный мальчик хуже, чем средний ученик Слизерина).

> Результат: 2.8 б.

> Комментарии:


| Название блока                                         | Детальное описание                                                                                                                                                                                                                                                 | Балл за блок | Наличие   | Комментарий                                                                                                | Результат |
|--------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------|-----------|------------------------------------------------------------------------------------------------------------|-----------|
| Общая структура графика                                | Виолин-плот с разбиением по факультетам с выделением цветов, фасетирование по полу                                                                                                                                                                                 | 0.5          | Частично  | В референсном графике использован дефолтный вариант с “подрезанием” границ скрипичного графика `trim=TRUE` | 0.4       |
| Кегль шрифта                                           | Точное соответствие не требуется, ожидается, что шрифт будет достаточно крупным, и будут сохранены “ранговые соотношения” между шрифтами. Заголовок – 32, Ось Y – 29, плашки фасетов и легенда – 25, подзаголовок и метки на осях – 20. Подпись – дефолтный кегль. | 0.5          | Полностью |                                                                                                            | 0.5       |
| Прочие настройки темы.                                 | Добавление белого фона, расположение легенды, использование курсива, цветов шрифта, выравнивание заголовка и подзаголовка по центру. Выбор шрифта Times New Roman.                                                                                                 | 0.5          | Частично  | Легенда расположена горизонтально, курсив отсутствует, шрифт без засечек, надписи не центрированы          | 0.25      |
| Текстовые элементы                                     | Настройка подписей осей, наличие заголовка, подзаголовка и подписи                                                                                                                                                                                                 | 0.5          | Частично  | Все сливается и выходит за пределы графика. Подпись прикольная.                                            | 0.1       |
| Цветовая гамма и метки на осях соответствуют референсу |                                                                                                                                                                                                                                                                    | 0.25         | Частично  | не соответствуют метки на оси y                                                                            | 0.15      |
| Настройка подписей фасетов                             | Предполагалось использование функции labeller(). Материал выходит за рамки пройденного на лекциях.                                                                                                                                                                 | 0.25         | Полностью |                                                                                                            | 0.25      |
| Добавление боксплотов поверх geom_violin               |                                                                                                                                                                                                                                                                    | 0.25         | Частично  | У боксплотов контур не белого цвета                                                                        | 0.15      |
| Средние значения                                       | Средний балл за весь год для каждого факультета без разбиения по полу. Оформление средних в виде ромба крупного размера (10) коричневого цвета с черным контуром.                                                                                                  | 0.25         | Частично  | Случилось разбиение по полу                                                                                | 0.1       |
| Горизонтальная линия                                   | Пунктир, размер (2), лососевый цвет.                                                                                                                                                                                                                               | 0.25         | Полностью |                                                                                                            | 0.25      |
| Размер графика                                         | Точного соответствия не предполагается. Ожидается график размера большего, чем дефолтный, элементы на котором не будут выглядеть слишком мелкими. Исходный размер – 16:10                                                                                          | 0.5          | Полностью | График маленький, текстовые элементы на нем не помещаются.                                                 | 0.1       |
| Аннотация                                              | Изогнутые стрелки со с сОлидными концами                                                                                                                                                                                                                           | 0.25         | Частично  | Вижу концы стрелок, но не сами стрелки, к сожалению                                                        | 0.05      |
| Интерпретация                                          | Если кратко: когтевранцы набирают больше всех баллов, у слизеринцев бимодальное распределение. Бимодальность проявляется в полярных отметках юношей и девушек. Если написано, что как раз для таких случаев средние не очень показательны – замечательно.          | 0.5          | Полностью |                                                                                                            | 0.5       |

> Итог: 19.3 б.

> Итоговый комментарий: 

- У вас необычные и очень интересные подходы к реализации заданий, вы много экспериментируете и выходите за пределы лекционного материала -- и это очень здорово. Также вы отлично интерпретируете увиденное на графике. Из рекомендаций -- я бы посоветовал вам делать графики крупнее посредством настройки в чанках `fig.width` и `fig.height`. Большая часть потерянных баллов была прямо или косвенно связана именно с этой проблемой. Из-за небольшого формата, подписи начинают выходить за рамки полотнища, сливаться друг с другом, и, в результате, мы получаем нечитаемую (в прямом смысле слова) картинку.
